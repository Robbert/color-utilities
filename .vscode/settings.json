{
  "typescript.enablePromptUseWorkspaceTsdk": true,
  "typescript.tsdk": "node_modules/typescript/lib",
  "typescript.format.enable": true,
  "typescript.disableAutomaticTypeAcquisition": true,
  "typescript.check.npmIsInstalled": true,
  "typescript.surveys.enabled": true,
  "typescript.tsc.autoDetect": "on",
  "editor.formatOnSave": true,
  "editor.formatOnType": false,
  "editor.formatOnPaste": false,
  "cmake.configureOnOpen": false,
  "editor.formatOnSaveMode": "modificationsIfAvailable",
  "diffEditor.codeLens": true,
  "prettier.bracketSameLine": true,
  "prettier.jsxSingleQuote": true,
  "prettier.singleQuote": true,
  "javascript.format.insertSpaceAfterConstructor": true,
  "javascript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": true,
  "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": true,
  "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": true,
  "javascript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": true,
  "javascript.format.insertSpaceBeforeFunctionParenthesis": true,
  "javascript.format.placeOpenBraceOnNewLineForControlBlocks": true,
  "javascript.format.placeOpenBraceOnNewLineForFunctions": true,
  "javascript.format.semicolons": "insert",
  "javascript.inlayHints.enumMemberValues.enabled": true,
  "javascript.inlayHints.functionLikeReturnTypes.enabled": true,
  "javascript.preferGoToSourceDefinition": false,
  "js/ts.implicitProjectConfig.module": "ES2020",
  "js/ts.implicitProjectConfig.experimentalDecorators": true,
  "javascript.referencesCodeLens.enabled": true,
  "javascript.referencesCodeLens.showOnAllFunctions": true,
  "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": true,
  "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": true,
  "typescript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": true,
  "typescript.format.insertSpaceAfterTypeAssertion": true,
  "typescript.format.placeOpenBraceOnNewLineForControlBlocks": true,
  "typescript.format.placeOpenBraceOnNewLineForFunctions": true,
  "typescript.format.insertSpaceBeforeFunctionParenthesis": true,
  "typescript.format.semicolons": "insert",
  "typescript.implementationsCodeLens.showOnInterfaceMethods": true,
  "typescript.implementationsCodeLens.enabled": true,
  "typescript.referencesCodeLens.showOnAllFunctions": true,
  "typescript.referencesCodeLens.enabled": true,
  "typescript.tsserver.experimental.enableProjectDiagnostics": true,
  "typescript.tsserver.enableTracing": true,
  "typescript.tsserver.log": "terse",
  "typescript.tsserver.useSyntaxServer": "always",
  "typescript.workspaceSymbols.scope": "allOpenProjects"

  // "workbench.colorCustomizations": {
  //   "activityBar.activeBackground": "#0b8aff",
  //   "activityBar.activeBorder": "#ffbfe0",
  //   "activityBar.background": "#0b8aff",
  //   "activityBar.foreground": "#e7e7e7",
  //   "activityBar.inactiveForeground": "#e7e7e799",
  //   "activityBarBadge.background": "#ffbfe0",
  //   "activityBarBadge.foreground": "#15202b",
  //   "statusBar.background": "#0070d7",
  //   "statusBar.foreground": "#e7e7e7",
  //   "statusBarItem.hoverBackground": "#0b8aff",
  //   "titleBar.activeBackground": "#0070d7",
  //   "titleBar.activeForeground": "#e7e7e7",
  //   "titleBar.inactiveBackground": "#0070d799",
  //   "titleBar.inactiveForeground": "#e7e7e799",
  //   "commandCenter.border": "#e7e7e799",
  //   "sash.hoverBorder": "#0b8aff",
  //   "statusBarItem.remoteBackground": "#0070d7",
  //   "statusBarItem.remoteForeground": "#e7e7e7"
  // }
}
